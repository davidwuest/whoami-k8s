apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
spec:
  selector:
    matchLabels:
      app: whoami
  replicas: 1
  template:
    metadata:
      labels:
        app: whoami
    spec:
      containers:
        - name: whoami
          image: traefik/whoami:v1.9.0
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
---
# This Ingress resource is used to route traffic to the whoami service.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whoami
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: dw-net-ca
    cert-manager.io/cluster-issuer: dw-net-ca
spec:
  rules:
  - host: whoami.internal
    http:
      paths:
      - path: /
        pathType: Exact
        backend:
          service:
            name:  whoami
            port:
              number: 5678
  tls:
  - hosts:
    - whoami.internal
    secretName: dw-net-ca-cert # <=== Use the name defined in Certificate resource.

---
apiVersion: v1
kind: Service
metadata:
  name: whoami
  namespace: cert-manager
spec:
  type: ClusterIP
  ports:
    - port: 5678
      targetPort: 80
  selector:
    app: whoami
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dw-net-ca-cert
  namespace: cert-manager
spec:
  secretName: dw-net-ca-cert
  issuerRef:
    name: dw-net-ca
    kind: ClusterIssuer
  dnsNames:
    - whoami.internal
  duration: 24h # 24 hours
  renewBefore: 23h # 23 hours
  privateKey:
    algorithm: RSA        # or ECDSA â€“ match what you want
    size: 2048            # match your requirements
    rotationPolicy: Always
 
